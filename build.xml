<?xml version="1.0" encoding="UTF-8"?>
<project name="builder" default="build">

    <target name="build" depends="prepare,lint,phploc,pdepend,phpmd-ci,jspmd-ci,jshint-ci,phpcs-ci,jscs-ci,phpcpd,phpunit,doxygen"/>
    <target name="build-parallel" depends="prepare,lint,tools-parallel,phpunit"/>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
            <antcall target="phpdox"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <mkdir dir="${basedir}/build/doc"/>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="/usr/bin/php" failonerror="true">
            <arg value="-l" />
            <fileset dir="${basedir}/">
                <include name="**/*.php" />
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="/usr/local/bin/phploc">
            <arg value="--count-tests" />
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg path="${basedir}/" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="/usr/local/bin/pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg path="${basedir}/class" />
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="/usr/local/bin/phpmd">
            <arg path="${basedir}/class" />
            <arg value="xml" />
            <arg value="/home/jenkins/conf/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd-php.xml" />
        </exec>
    </target>

    <target name="jspmd-ci" description="javascript PMD">
        <exec executable="/home/jenkins/pmd/bin/run.sh">
            <arg value="pmd" />
            <arg value="-d" />
            <arg path="${basedir}/resource/js" />
            <arg value="-f" />
            <arg value="xml" />
            <arg value="-R" />
            <arg value="/home/jenkins/conf/pmd-javascript.xml" />
            <arg value="-l" />
            <arg value="ecmascript" />
            <arg value="-r" />
            <arg value="${basedir}/build/logs/pmd-js.xml" />
        </exec>
    </target>

    <target name="jshint-ci" description="jshint">
        <exec executable="/home/jenkins/node_modules/jshint/bin/jshint" output="${basedir}/build/logs/checkstyle-jshint.xml">
            <arg value="--reporter=checkstyle"/>
            <arg path="${basedir}/resource/js" />
        </exec>
    </target>

    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="/usr/local/bin/phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle-php.xml" />
            <arg value="--standard=EC" />
            <arg value="--ignore=*.js" />
            <arg value="--ignore=*.css" />
            <arg value="--ignore=tests" />
            <arg path="${basedir}/class" />
        </exec>
    </target>

    <target name="jscs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="/usr/local/bin/phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle-js.xml" />
            <arg value="--standard=ECJS" />
            <arg value="--ignore=*.php" />
            <arg value="--ignore=*.css" />
            <arg value="--ignore=${basedir}/resource/js/external/jquery.12r.colorpicker.js" />
            <arg path="${basedir}/resource/js" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="/usr/local/bin/phpcpd">
            <arg value="--min-lines=4" />
            <arg value="--min-tokens=40" />
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/cpd-php.xml" />
            <arg path="${basedir}/class" />
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="/usr/local/bin/phpunit" failonerror="true">
            <arg value="--configuration"/>
            <arg path="${basedir}/phpunit.xml"/>
        </exec>
    </target>

    <target name="doxygen" description="doxygen">
        <exec executable="/usr/bin/doxygen"/>
    </target>

</project>